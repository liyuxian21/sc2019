<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsd.app.clientorder.dao.OrderDao">
<!--    判断店铺是否绑定了邀请码-->
    <select id="getStoreById" parameterType="java.lang.String" resultType="com.xzsd.app.clientorder.entity.StoreVO">
        select
            b.invite_code storeInviteCode
        from
            t_sys_user a,
            t_sys_client b,
            t_sys_store c
        where a.user_code=#{userId}
        and a.user_code=b.user_id
        and b.invite_code=c.invite_code
        and a.is_deleted=0
    </select>
<!--新增订单-->
    <insert id="addOrder" parameterType="com.xzsd.app.clientorder.entity.OrderInfo">
        insert into t_sys_order
        (
            order_id,
            order_code,
            order_price,
            order_status,
            store_id,
            user_code,
            paid_time,
            count,
            is_deleted,
            create_people,
            create_time,
            update_people,
            update_time,
            version
        )values
        (
            #{orderId},
            #{orderCode},
            #{countPrice},
            0,
            #{storeId},
            #{userId},
            now(),
            #{goodsNumber},
            0,
            #{createPeople},
            now(),
            #{updatePeople},
            now(),
            0
        )
    </insert>
<!--    查询商品详情-->
    <select id="getGoods" parameterType="java.lang.String" resultType="com.xzsd.app.clientorder.entity.GoodsVO">
        select
            product_id      goodsId,
            price_now       price
        from
            t_sys_product
        where product_id=#{goodsId}
        and is_deleted=0
    </select>
<!--    新增订单明细-->
    <insert id="addOrderDetail" parameterType="java.util.List">
        insert into t_sys_order_detail (
            order_clear_id,
            order_id,
            product_id,
            goods_count,
            price_one,
            sum_price,
            is_deleted,
            create_people,
            create_time,
            update_people,
            update_time,
            version
        ) values
        <foreach collection="orderDetailVOList" index="index" item="item" open="" separator="," close="">
        (
            #{item.orderClearId},
            #{item.orderId},
            #{item.goodsId},
            #{item.goodsShoppingNumber},
            #{item.price},
            #{item.goodsShoppingNumber} * #{item.price},
            0,
            #{item.createPeople},
            now(),
            #{item.updatePeople},
            now(),
            0
        )
        </foreach>
    </insert>
    <!--    更新商品库存和数量-->
    <update id="update" parameterType="java.util.List">
        <foreach collection="orderDetailVOList" index="index" item="item" open="" separator=";" close="">
            update t_sys_product
            set
            sale_num = sale_num + #{item.goodsShoppingNumber},
            stock = stock - #{item.goodsShoppingNumber}
            where product_id=#{item.goodsId}
            and is_deleted=0
        </foreach>
    </update>
<!--    将商品从购物车移除-->
    <delete id="deleteGoods" parameterType="java.lang.String">
       update t_sys_shopping
       set
        is_deleted =1
       where shopping_id in
        <foreach collection="goodsIdList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
<!--    查询订单列表-->
    <resultMap id="orderListResultMap" type="com.xzsd.app.clientorder.entity.OrderListVO">
        <id column="order_id" property="orderId"/>
        <result column="order_code" property="orderCode"/>
        <result column="order_price" property="countPrice"/>
        <result column="order_status" property="orderStatus"/>
        <result column="count" property="goodsNumber"/>
        <collection property="goodsList" ofType="com.xzsd.app.clientorder.entity.OrderDetailVO" select="selectOrderDetail" column="order_id">
            <id column="order_clear_id" property="orderClearId"/>
            <result column="product_id" property="goodsId"/>
            <result column="product_name" property="goodsName"/>
            <result column="goods_count" property="goodsShoppingNumber"/>
            <result column="price_one" property="price"/>
            <result column="product_image" property="photoUrl"/>
        </collection>
    </resultMap>
    <select id="listOrderByPage" parameterType="com.xzsd.app.clientorder.entity.OrderListVO" resultMap="orderListResultMap">
        select
            order_id,
            order_code,
            order_price,
            order_status,
            count
        from
            t_sys_order
        where user_code=#{userId}
        and is_deleted=0
        <if test="orderStatus != null and orderStatus != ''">
            and order_status like concat('%', #{orderStatus}, '%')
        </if>
        order by update_time desc
    </select>
    <select id="selectOrderDetail" parameterType="com.xzsd.app.clientorder.entity.OrderDetailVO" resultType="com.xzsd.app.clientorder.entity.OrderDetailVO">
        select
            a.order_clear_id orderClearId,
            a.product_id    goodsId,
            b.product_name  goodsName,
            a.goods_count   goodsShoppingNumber,
            a.price_one     price,
            b.product_image photoUrl
        from
            t_sys_order_detail a,
            t_sys_product b
        where
            a.order_id=#{orderId}
            and a.product_id=b.product_id
            and a.is_deleted=0
        order by a.update_time desc
    </select>
<!--    获取订单详情-->
    <resultMap id="orderMap" type="com.xzsd.app.clientorder.entity.OrderStoreVO">
        <id column="order_id" property="orderId"/>
        <result column="order_code" property="orderCode"/>
        <result column="order_price" property="countPrice"/>
        <result column="order_status" property="orderStatus"/>
        <result column="count" property="goodsNumber"/>
        <result column="paid_time" property="createTime"/>
        <result column="store_name" property="storeName"/>
        <result column="address" property="address"/>
        <collection property="goodsList" ofType="com.xzsd.app.clientorder.entity.OrderDetailVO" select="selectOrder" column="order_id">
            <id column="order_clear_id" property="orderClearId"/>
            <result column="product_id" property="goodsId"/>
            <result column="product_name" property="goodsName"/>
            <result column="goods_count" property="goodsShoppingNumber"/>
            <result column="price_one" property="price"/>
            <result column="product_image" property="photoUrl"/>
        </collection>
    </resultMap>
    <select id="findOrderById" parameterType="java.lang.String" resultMap="orderMap">
        SELECT
            a.order_id,
            a.order_code,
            a.order_price,
            a.order_status,
            a.count,
            a.paid_time,
            CONCAT_WS( '', c.dict_name, d.dict_name, e.dict_name, b.store_address ) AS address,
            b.store_name
        FROM
            t_sys_order a,
            t_sys_store b,
            dictionaries c,
            dictionaries d,
            dictionaries e
        WHERE
            a.order_id = #{orderId}
            AND a.store_id = b.store_id
            AND b.provice_id = c.dictionaries_id
            AND b.city_id = d.dictionaries_id
            AND b.area_id = e.dictionaries_id
            AND a.is_deleted =0
       </select>
    <select id="selectOrder" parameterType="com.xzsd.app.clientorder.entity.OrderDetailVO" resultType="com.xzsd.app.clientorder.entity.OrderDetailVO">
        select
            a.order_clear_id orderClearId,
            a.product_id    goodsId,
            b.product_name  goodsName,
            a.goods_count   goodsShoppingNumber,
            a.price_one     price,
            b.product_image photoUrl
        from
            t_sys_order_detail a,
            t_sys_product b
        where
            a.order_id=#{orderId}
            and a.product_id=b.product_id
            and a.is_deleted=0
        order by a.update_time desc
    </select>
<!--    客户修改订单状态-->
    <update id="updateOrder" parameterType="com.xzsd.app.clientorder.entity.OrderInfo">
        update t_sys_order
        set
            order_status    =   #{orderStatus},
            update_people   =   #{userId}
        where order_id=#{orderId}
        and   is_deleted=0
    </update>
<!--   新增评价信息-->
    <insert id="addAppraise" parameterType="com.xzsd.app.clientorder.entity.OrderAppraise">
        insert  into t_sys_appraise
        (
            appraise_id,
            order_id,
            appraise_content,
            user_id,
            product_id,
            start_level,
            is_deleted,
            create_time,
            update_time,
            version
        )values
        <foreach collection="appraiseList" index="index" item="item" open="" separator="," close="">
         (
            #{item.appraiseId},
            #{orderId},
            #{item.appraiseComment},
            #{userId},
            #{item.goodsId},
            #{item.level},
            0,
            now(),
            now(),
            0
         )
        </foreach>
    </insert>
<!--    新增评价图片信息-->
    <insert id="addAppraiseImage" parameterType="com.xzsd.app.clientorder.entity.AppraiseImage">
        insert  into t_sys_appraise_image
        (
            appraise_image_id,
            appraise_id,
            image,
            sort,
            is_deleted,
            create_time,
            update_time,
            version
        )values
        <foreach collection="appraiseImageList" index="index" item="item" open="" separator="," close="">
        (
            #{item.appraiseImageId},
            #{item.appraiseId},
            #{item.photoUrl},
            #{item.sort},
            0,
            now(),
            now(),
            0
        )
        </foreach>
    </insert>
<!--    查询商品评价列表-->
    <resultMap id="appraiseResultMap" type="com.xzsd.app.clientorder.entity.AppraiseList">
        <id column="appraise_id" property="appraiseId"/>
        <result column="product_id" property="goodsId"/>
        <result column="user_account" property="userAccount"/>
        <result column="appraise_content" property="appraiseComment"/>
        <result column="start_level" property="level"/>
        <result column="create_time" property="appraiseTime"/>
        <collection property="appraisePhotoList" ofType="com.xzsd.app.clientorder.entity.AppraiseImage" select="selectAppraise" column="appraise_id">
            <id column="appraise_image_id" property="appraiseImageId"/>
            <result column="image" property="photoUrl"/>
        </collection>
    </resultMap>
    <select id="listAppraiseByPage" parameterType="com.xzsd.app.clientorder.entity.AppraiseList" resultMap="appraiseResultMap">
        SELECT
            a.appraise_id,
            a.product_id,
            b.user_account,
            a.appraise_content,
            a.start_level,
            a.create_time
        FROM
            t_sys_appraise a
            LEFT JOIN t_sys_user b ON a.user_id = b.user_code
        WHERE
            a.product_id = #{goodsId}
            AND a.is_deleted =0
        <if test="appraiseGoodsLevel == 0">
            and a.start_level in(1,2)
        </if>
        <if test="appraiseGoodsLevel == 1">
            and a.start_level in(3,4)
        </if>
        <if test="appraiseGoodsLevel == 2">
            and a.start_level = 5
        </if>
        order by a.update_time desc
    </select>
    <select id="selectAppraise" parameterType="com.xzsd.app.clientorder.entity.AppraiseImage" resultType="com.xzsd.app.clientorder.entity.AppraiseImage">
        SELECT
            a.appraise_image_id appraiseImageId,
            a.image photoUrl
        FROM
            t_sys_appraise_image a,
            t_sys_appraise b
        WHERE
            a.appraise_id = #{appraiseId}
            AND a.appraise_id = b.appraise_id
            AND a.is_deleted = 0
        ORDER BY
            a.sort asc
    </select>
    <!--    更新商品评价等级-->
    <update id="updateGoodsLevel" parameterType="com.xzsd.app.clientorder.entity.AppraiseInfo">
        <foreach collection="appraiseList" item="item" open="" separator=";" close="" index="index">
            update t_sys_product
            set
            satrt_level=(satrt_level+#{item.level})/2
            where product_id=#{item.goodsId}
        </foreach>
    </update>
</mapper>